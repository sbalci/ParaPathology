name: patoloji-hakkinda
on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  quarto-render-and-deploy:
    runs-on: ubuntu-latest
    continue-on-error: true
    env:
      RENV_PATHS_ROOT: ~/.local/share/renv
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}

    steps:
      - name: "actions checkout"
        uses: actions/checkout@v3
        
      - uses: docker://pandoc/core:2.9
      
      - uses: r-lib/actions/setup-r@v2   

      - uses: r-lib/actions/setup-renv@v2



      - name: Restore R package cache
        uses: actions/cache@v2
        with:
          path: ${{ env.R_LIBS_USER }}
          key: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-${{ hashFiles('.github/depends.Rds') }}
          restore-keys: ${{ runner.os }}-${{ hashFiles('.github/R-version') }}-1-

      - name: Install R dependencies
        run: |
            if (!requireNamespace("remotes", quietly = TRUE)) {install.packages("remotes", dependencies = TRUE, quiet = TRUE, verbose = FALSE)}
            remotes::install_deps(dependencies = TRUE)
            if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv", dependencies = TRUE, quiet = TRUE, verbose = FALSE)
            renv::restore()
            if (!requireNamespace("fs", quietly = TRUE)) install.packages("fs", dependencies = TRUE, quiet = TRUE, verbose = FALSE)
            if (!requireNamespace("quarto", quietly = TRUE)) install.packages("quarto", dependencies = TRUE, quiet = TRUE, verbose = FALSE)
            saveRDS(remotes::dev_package_deps(dependencies = TRUE), ".github/depends.Rds", version = 2)
            writeLines(sprintf("R-%i.%i", getRversion()$major, getRversion()$minor), ".github/R-version")
        shell: Rscript {0}

      - name: "Render patoloji-hakkinda"
        shell: Rscript {0}
        run: |
          filestorender <- list.files(path = '.', pattern = '.md', full.names = TRUE, recursive = TRUE)
          purrr::map(.x = filestorender, .f= rmarkdown::render, encoding = 'UTF-8', output_dir = './patoloji-hakkinda/')
          

  patoloji-hakkinda:
    runs-on: ubuntu-latest
    container: ubuntu
    steps:
      - uses: actions/checkout@v3

      - name: Pushes to patoloji-hakkinda
        uses: cpina/github-action-push-to-another-repository@main
        env:
          API_TOKEN_GITHUB: ${{ secrets.API_TOKEN_GITHUB }}
        with:
          source-directory: .
          destination-github-username: 'sbalci'
          destination-repository-name: 'patoloji-hakkinda'
          user-email: drserdarbalci@gmail.com
          target-branch: main





#  build:

#    runs-on: ubuntu-latest

#    steps:
#    - uses: actions/checkout@v2
#    - name: Build the site in the jekyll/builder container
#      run: |
#        docker run \
#        -v ${{ github.workspace }}:/srv/jekyll -v ${{ github.workspace }}/_site:/srv/jekyll/_site \
#        jekyll/builder:latest /bin/bash -c "chmod -R 777 /srv/jekyll && jekyll build --future"
  # tweet:
  #   runs-on: ubuntu-latest
    # steps:
    #   - name: Get current date
    #     id: date
    #     run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    #   - uses: ethomson/send-tweet-action@v1
    #     with:
    #       status: (Para)Pathology notes are updated on ${{ steps.date.outputs.date }}. See here https://www.parapathology.com/ and here https://www.patolojinotlari.com/
    #       consumer-key: ${{ secrets.API_KEY }}
    #       consumer-secret: ${{ secrets.API_SECRET_KEY }}
    #       access-token: ${{ secrets.ACCESS_TOKEN }}
    #       access-token-secret: ${{ secrets.ACCESS_TOKEN_SECRET }}


